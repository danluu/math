To make stan-math work with MPI we assume that you have a working MPI
installation on your system. Macports or homebrew have openmpi and
mpich ready for installation, both work well. As a next step the boost
mpi and serialization library need to be installed. For standard
systems the boost build system should be able to figure out all
necessary bits and pieces. The required boost libraries are bundled
with stan-math and a simple

make stan-mpi

should suffice to get a working system. All what is left to be done
is to add the line

include make/mpi

to your make/local file.

The make/mpi file ensures that all required build flags are set. In
particular it sets as the CXX and CC variable equal to mpic++ which
calls the compiler which was used to build mpi with adequate
flags. This is the recommended way to build MPI programs. However,
should you need to change these flags for some reason, you can find
out what these flags are with

mpic++ --showme

and adapt accordingly to your needs. If all of the above works, then
the MPI tests part of stan-math can be executed with

make test/unit/math/prim/mat/functor/map_rect_mpi_test.cpp
make test/unit/math/rev/mat/functor/map_rect_mpi_test.cpp

and then starting them with the mpirun command as

mpirun -np 4 test/unit/math/prim/mat/functor/map_rect_mpi_test
mpirun -np 4 test/unit/math/rev/mat/functor/map_rect_mpi_test


Firwalls and MPI

In case you run things on a single machine on Mac your firewall will
complain about attempts of your MPI program to listen on the
network. To avoid this, you will need to disable network communication
and use shared memory communcation only. For OpenMPI create the file

~/.openmpi/mca-params.conf

and put the line

btl=self,vader

into that file. This will stop programs started with mpirun to try to
listen top incoming network connections.

Of course, should you want to spawn over multiple machines, this is
not a solution. In that case OpenMPI can be configure to restrict to
certain ports which needs to be configured. See open-mpi.org for
documentation on the matter.